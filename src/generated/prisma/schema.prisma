// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  phone        String
  industryType String
  address      String
  website      String?
  createdAt    DateTime @default(now())

  admin Admin? // one-to-one relation
  users User[] // one-to-many relation
  Room  Room[]

  @@unique([name, address])
}

model Admin {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @unique
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime @default(now())
  room      Room?    @relation(fields: [roomId], references: [id])
  roomId    String?
}

model Room {
  id                String   @id @default(uuid())
  name              String
  company           Company  @relation(fields: [companyId], references: [id])
  companyId         String
  users             User[]
  userPriorityOrder String[]
  createdAt         DateTime @default(now())

  @@unique([name, companyId]) // Ensures room names are unique per company
}
