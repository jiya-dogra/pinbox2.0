// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  phone        String
  industryType String
  address      String
  website      String?
  createdAt    DateTime @default(now())
  admin        Admin?
  users        User[]
  Room         Room[]

  @@unique([name, address])
}

model Admin {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @unique
  createdAt DateTime @default(now())
}

model User {
  id            String   @id @default(uuid())
  fullName      String
  email         String   @unique
  password      String
  company       Company  @relation(fields: [companyId], references: [id])
  companyId     String
  createdAt     DateTime @default(now())
  room          Room?    @relation(fields: [roomId], references: [id])
  roomId        String?
  priority      Int?     @default(1)
  tasksAssigned Task[]   @relation("TaskAssignedBy") // No default = empty array
  tasksReceived Task[]   @relation("TaskAssignedTo") // No default = empty array
}

model Room {
  id        String   @id @default(uuid())
  name      String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  users     User[]
  createdAt DateTime @default(now())

  @@unique([name, companyId]) // Ensures room names are unique per company
}

model Task {
  id           String   @id @default(uuid())
  title        String
  description  String?
  dueDate      DateTime
  status       String   @default("pending")
  assignedBy   User     @relation("TaskAssignedBy", fields: [assignedById], references: [id])
  assignedById String
  assignedTo   User     @relation("TaskAssignedTo", fields: [assignedToId], references: [id])
  assignedToId String
  createdAt    DateTime @default(now())
}
